[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tavo"
version = "0.1.0"
description = "ðŸš€ Modern full-stack framework CLI with Python backend, Rust+SWC powered SSR for React, and HMR"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "CyberwizDev", email = "cyberwizdev@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Framework :: AsyncIO",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: User Interfaces",
    "Environment :: Console",
    "Environment :: Web Environment",
]
keywords = [
    "tavo", 
    "web", 
    "framework", 
    "fullstack", 
    "cli", 
    "starlette", 
    "react", 
    "ssr", 
    "hmr", 
    "rust", 
    "swc", 
    "bundler", 
    "scaffolding",
    "python",
    "typescript",
    "javascript"
]
requires-python = ">=3.8"
dependencies = [
    "starlette>=0.47.0",
    "watchfiles>=1.1.0",
    "websockets>=15.0.0",
    "click>=8.2.0",
    "rich>=14.1.0",
    "typer>=0.16.0",
    "python-dotenv>=1.1.0",
    "anyio>=4.10.0",
    "requests>=2.32.0",
    "uvicorn>=0.25.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.urls]
Homepage = "https://github.com/cyberwizdev/tavo"
Documentation = "https://github.com/cyberwizdev/tavo/docs"
Repository = "https://github.com/cyberwizdev/tavo"
"Bug Tracker" = "https://github.com/cyberwizdev/tavo/issues"
"Source Code" = "https://github.com/cyberwizdev/tavo"

[project.scripts]
tavo = "tavo.cli.main:main"

[project.entry-points."tavo.commands"]
new = "tavo.cli.commands.create:new_command"
dev = "tavo.cli.commands.dev:dev_command" 
build = "tavo.cli.commands.build:build_command"
add = "tavo.cli.commands.create:add_command"
start = "tavo.cli.commands.start:start_command"
install = "tavo.cli.commands.install:install_command"

[tool.setuptools]
# Explicitly list all packages instead of using find
packages = [
    "tavo",
    "tavo.cli", 
    "tavo.cli.commands",
    "tavo.cli.utils",
    "tavo.core",
    "tavo.core.hmr",
    "tavo.core.orm", 
    "tavo.core.router",
    "tavo.templates.default",
    "tavo.templates.default.api",
    "tavo.templates.default.api.models",
    "tavo.templates.default.api.routes", 
    "tavo.templates.default.app",
    "tavo.templates.default.app.components"
]

# Include template files
[tool.setuptools.package-data]
"tavo.templates.default" = ["**/*"]
"tavo.templates.default.api" = ["**/*"]  
"tavo.templates.default.app" = ["**/*"]

# Make sure to include non-Python files
[tool.setuptools.package-dir]
"" = "."



[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]